---
import { Icon } from "astro-icon";
import { getSidebar, SidebarHeaderSection } from "../sidebar";
import BrandIcon from "./BrandIcon.astro";
import IconMenu from "./IconMenu.astro";
import NavbarLinks from "./NavbarLinks.astro";

interface Props {
  title: string;
  currentPage: string;
  page: "docs" | "blog";
}

const { page, title, currentPage } = Astro.props;
let currentHref = `/${page}/${currentPage}`;
if (currentHref.endsWith("/")) currentHref = currentHref.substring(0, currentHref.length - 1);

const sidebar = await getSidebar(page);

function isActive(href: string) {
  return href === currentHref;
}

function isHeaderOpen(header: SidebarHeaderSection) {
  return header.open || header.links.some(x => isActive(x.href));
}
---

<nav id="sidebar">
  <div class="wrap custom-scroll">
    <header>
      <div class="brand">
        <BrandIcon />
        <span class="brand-section">{title}</span>
      </div>
      <div class="hstack gap-2 menu">
        <a class="icon-link" title="Github repository" href="/repository" target="_blank"
          ><Icon name="mdi:github" className="icon" /></a
        >
        <IconMenu container="sidebar" />
      </div>
    </header>
    <div class="body">
      <div class="d-flex-column">
        <NavbarLinks currentPage={currentPage} />

        {
          sidebar.entries.map(x =>
            "header" in x ? (
              <details class={`sidebar-section ${x.className || ""}`} open={isHeaderOpen(x)}>
                <summary class="sidebar-header">
                  {x.header} <Icon class="icon" name="ic:round-chevron-right" />
                </summary>
                <div class="sidebar-section-links d-flex-column">
                  {x.links.map(x => (
                    <a href={x.href} class={`btn btn-sidebar ${isActive(x.href) ? "active" : ""}`}>
                      {x.text}
                    </a>
                  ))}
                </div>
              </details>
            ) : (
              <a href={x.href} class={`btn btn-sidebar ${isActive(x.href) ? "active" : ""}`}>
                {x.text}
              </a>
            )
          )
        }
      </div>
    </div>
  </div>
</nav>
